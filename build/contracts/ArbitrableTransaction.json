{
  "contractName": "ArbitrableTransaction",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyA",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyA",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "status",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyB",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyAFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "partyBFee",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "timeout",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "timeOutByPartyB",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastInteraction",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyA",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "disputeID",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "payArbitrationFeeByPartyB",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "submitEvidence",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_hashContract",
          "type": "bytes32"
        },
        {
          "name": "_timeout",
          "type": "uint256"
        },
        {
          "name": "_partyB",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_party",
          "type": "uint8"
        }
      ],
      "name": "HasToPayFee",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_rulingOptions",
          "type": "string"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_contractHash",
          "type": "bytes32"
        }
      ],
      "name": "ContractHash",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amountReimbursed",
          "type": "uint256"
        }
      ],
      "name": "reimburse",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405260405162001abd38038062001abd83398101806040528101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805182019291905050508484848484848185826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160019080519060200190620000b09291906200019c565b507f1892820d22f2ab2b60795935d39550f42562bf8862a0b3c2193b095baa40af218160405180826000191660001916815260200191505060405180910390a15050508260028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505034600a6000828254019250508190555050505050506200024b565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001df57805160ff191683800117855562000210565b8280016001018555821562000210579182015b828111156200020f578251825591602001919060010190620001f2565b5b5090506200021f919062000223565b5090565b6200024891905b80821115620002445760008160009055506001016200022a565b5090565b90565b611862806200025b6000396000f300608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063069fae2a146101175780630c7ac7b61461017357806310e1d8ca1461020357806319e2641e1461025a5780631b9265b814610271578063200d2ed21461028857806329040113146102c1578063311a6c56146103185780634a44c2e41461034f5780634b40c9741461037c578063512491f1146103a75780636cc6cde1146103d257806370dea79a14610429578063853c80ce146104545780638f71a2651461046b578063a010963114610496578063aa8c217c146104a0578063b0a1e2b4146104cb578063b1bcce3a146104f6578063bac91e2e14610500575b600080fd5b610171600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610569565b005b34801561017f57600080fd5b50610188610738565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b506102186107d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026657600080fd5b5061026f6107fc565b005b34801561027d57600080fd5b506102866108b3565b005b34801561029457600080fd5b5061029d610984565b604051808260048111156102ad57fe5b60ff16815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610997565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032457600080fd5b5061034d60048036038101908080359060200190929190803590602001909291905050506109bd565b005b34801561035b57600080fd5b5061037a60048036038101908080359060200190929190505050610a75565b005b34801561038857600080fd5b50610391610b5e565b6040518082815260200191505060405180910390f35b3480156103b357600080fd5b506103bc610b64565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e7610b6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043557600080fd5b5061043e610b8f565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610469610b95565b005b34801561047757600080fd5b50610480610c4c565b6040518082815260200191505060405180910390f35b61049e610c52565b005b3480156104ac57600080fd5b506104b5610ee1565b6040518082815260200191505060405180910390f35b3480156104d757600080fd5b506104e0610ee7565b6040518082815260200191505060405180910390f35b6104fe610eed565b005b34801561050c57600080fd5b50610567600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061117c565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106125750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561061d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349912f8834600854846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ce5780601f106107a3576101008083540402835291602001916107ce565b820191906000526020600020905b8154815290600101906020018083116107b157829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085857600080fd5b6002600481111561086557fe5b600960009054906101000a900460ff16600481111561088057fe5b14151561088c57600080fd5b6002546007540142101515156108a157600080fd5b6108b1600854600160ff16611373565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b506000600a81905550565b600960009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1857600080fd5b813373ffffffffffffffffffffffffffffffffffffffff167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276836040518082815260200191505060405180910390a3610a718282611373565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ad157600080fd5b600a548111151515610ae257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b4a573d6000803e3d6000fd5b5080600a6000828254039250508190555050565b60055481565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bf157600080fd5b60016004811115610bfe57fe5b600960009054906101000a900460ff166004811115610c1957fe5b141515610c2557600080fd5b600254600754014210151515610c3a57600080fd5b610c4a600854600260ff16611373565b565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505092505050602060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b505050506040513d6020811015610ded57600080fd5b810190808051906020019092919050505090503460056000828254019250508190555080600554141515610e2057600080fd5b60036004811115610e2d57fe5b600960009054906101000a900460ff166004811115610e4857fe5b101515610e5457600080fd5b42600781905550806006541015610ed4576002600960006101000a81548160ff02191690836004811115610e8457fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568600160405180826001811115610ebc57fe5b60ff16815260200191505060405180910390a1610ede565b610edd8161145c565b5b50565b600a5481565b60085481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505092505050602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d602081101561108857600080fd5b8101908080519060200190929190505050905034600660008282540192505081905550806006541415156110bb57600080fd5b600360048111156110c857fe5b600960009054906101000a900460ff1660048111156110e357fe5b1015156110ef57600080fd5b4260078190555080600554101561116f576001600960006101000a81548160ff0219169083600481111561111f57fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56860006040518082600181111561115757fe5b60ff16815260200191505060405180910390a1611179565b6111788161145c565b5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112255750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561123057600080fd5b6003600481111561123d57fe5b600960009054906101000a900460ff16600481111561125857fe5b1015151561126557600080fd5b6008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350565b61137d82826116f0565b600160ff168114156113e857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f1935050505050611450565b600260ff1681141561144f57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050505b5b6000600a819055505050565b6003600960006101000a81548160ff0219169083600481111561147b57fe5b02179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c13517e182600260016040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360ff1681526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505093505050506020604051808303818588803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b50505050506040513d60208110156115ca57600080fd5b81019080805190602001909291905050506008819055506008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a126116040805190810160405280601981526020017f506172747920412077696e733b506172747920422077696e73000000000000008152506040518080602001828103825283818151815260200191508051906020019080838360005b838110156116b3578082015181840152602081019050611698565b50505050905090810190601f1680156116e05780820380516001836020036101000a031916815260200191505b509250505060405180910390a350565b6008548214151561170057600080fd5b600260ff16811115151561171357600080fd5b600160ff1681141561179257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006546005541161176e57600654611772565b6005545b9081150290604051600060405180830381858888f193505050505061180e565b600260ff1681141561180d57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600654600554116117ed576006546117f1565b6005545b9081150290604051600060405180830381858888f19350505050505b5b6004600960006101000a81548160ff0219169083600481111561182d57fe5b021790555050505600a165627a7a72305820aca04bcd374f3605a26d2d1410186c89bc7293ea040e198d84fa2d6cc775c6340029",
  "deployedBytecode": "0x608060405260043610610112576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063069fae2a146101175780630c7ac7b61461017357806310e1d8ca1461020357806319e2641e1461025a5780631b9265b814610271578063200d2ed21461028857806329040113146102c1578063311a6c56146103185780634a44c2e41461034f5780634b40c9741461037c578063512491f1146103a75780636cc6cde1146103d257806370dea79a14610429578063853c80ce146104545780638f71a2651461046b578063a010963114610496578063aa8c217c146104a0578063b0a1e2b4146104cb578063b1bcce3a146104f6578063bac91e2e14610500575b600080fd5b610171600480360381019080803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509192919290505050610569565b005b34801561017f57600080fd5b50610188610738565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156101c85780820151818401526020810190506101ad565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561020f57600080fd5b506102186107d6565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561026657600080fd5b5061026f6107fc565b005b34801561027d57600080fd5b506102866108b3565b005b34801561029457600080fd5b5061029d610984565b604051808260048111156102ad57fe5b60ff16815260200191505060405180910390f35b3480156102cd57600080fd5b506102d6610997565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561032457600080fd5b5061034d60048036038101908080359060200190929190803590602001909291905050506109bd565b005b34801561035b57600080fd5b5061037a60048036038101908080359060200190929190505050610a75565b005b34801561038857600080fd5b50610391610b5e565b6040518082815260200191505060405180910390f35b3480156103b357600080fd5b506103bc610b64565b6040518082815260200191505060405180910390f35b3480156103de57600080fd5b506103e7610b6a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561043557600080fd5b5061043e610b8f565b6040518082815260200191505060405180910390f35b34801561046057600080fd5b50610469610b95565b005b34801561047757600080fd5b50610480610c4c565b6040518082815260200191505060405180910390f35b61049e610c52565b005b3480156104ac57600080fd5b506104b5610ee1565b6040518082815260200191505060405180910390f35b3480156104d757600080fd5b506104e0610ee7565b6040518082815260200191505060405180910390f35b6104fe610eed565b005b34801561050c57600080fd5b50610567600480360381019080803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505061117c565b005b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106125750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561061d57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166349912f8834600854846040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018083815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106d05780820151818401526020810190506106b5565b50505050905090810190601f1680156106fd5780820380516001836020036101000a031916815260200191505b5093505050506000604051808303818588803b15801561071c57600080fd5b505af1158015610730573d6000803e3d6000fd5b505050505050565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107ce5780601f106107a3576101008083540402835291602001916107ce565b820191906000526020600020905b8154815290600101906020018083116107b157829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561085857600080fd5b6002600481111561086557fe5b600960009054906101000a900460ff16600481111561088057fe5b14151561088c57600080fd5b6002546007540142101515156108a157600080fd5b6108b1600854600160ff16611373565b565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561090f57600080fd5b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050158015610979573d6000803e3d6000fd5b506000600a81905550565b600960009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a1857600080fd5b813373ffffffffffffffffffffffffffffffffffffffff167f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e75622276836040518082815260200191505060405180910390a3610a718282611373565b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ad157600080fd5b600a548111151515610ae257600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610b4a573d6000803e3d6000fd5b5080600a6000828254039250508190555050565b60055481565b60065481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610bf157600080fd5b60016004811115610bfe57fe5b600960009054906101000a900460ff166004811115610c1957fe5b141515610c2557600080fd5b600254600754014210151515610c3a57600080fd5b610c4a600854600260ff16611373565b565b60075481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610cb057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818154600181600116156101000203166002900481526020019150805460018160011615610100020316600290048015610da35780601f10610d7857610100808354040283529160200191610da3565b820191906000526020600020905b815481529060010190602001808311610d8657829003601f168201915b505092505050602060405180830381600087803b158015610dc357600080fd5b505af1158015610dd7573d6000803e3d6000fd5b505050506040513d6020811015610ded57600080fd5b810190808051906020019092919050505090503460056000828254019250508190555080600554141515610e2057600080fd5b60036004811115610e2d57fe5b600960009054906101000a900460ff166004811115610e4857fe5b101515610e5457600080fd5b42600781905550806006541015610ed4576002600960006101000a81548160ff02191690836004811115610e8457fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e568600160405180826001811115610ebc57fe5b60ff16815260200191505060405180910390a1610ede565b610edd8161145c565b5b50565b600a5481565b60085481565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610f4b57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f7434ea960016040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561103e5780601f106110135761010080835404028352916020019161103e565b820191906000526020600020905b81548152906001019060200180831161102157829003601f168201915b505092505050602060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050506040513d602081101561108857600080fd5b8101908080519060200190929190505050905034600660008282540192505081905550806006541415156110bb57600080fd5b600360048111156110c857fe5b600960009054906101000a900460ff1660048111156110e357fe5b1015156110ef57600080fd5b4260078190555080600554101561116f576001600960006101000a81548160ff0219169083600481111561111f57fe5b02179055507fba8db766b5582c21593909b57af48297714ea2c508bfff6c537ce36bb853e56860006040518082600181111561115757fe5b60ff16815260200191505060405180910390a1611179565b6111788161145c565b5b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112255750600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b151561123057600080fd5b6003600481111561123d57fe5b600960009054906101000a900460ff16600481111561125857fe5b1015151561126557600080fd5b6008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c3384604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561133557808201518184015260208101905061131a565b50505050905090810190601f1680156113625780820380516001836020036101000a031916815260200191505b50935050505060405180910390a350565b61137d82826116f0565b600160ff168114156113e857600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f1935050505050611450565b600260ff1681141561144f57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600a549081150290604051600060405180830381858888f19350505050505b5b6000600a819055505050565b6003600960006101000a81548160ff0219169083600481111561147b57fe5b02179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c13517e182600260016040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808360ff1681526020018060200182810382528381815460018160011615610100020316600290048152602001915080546001816001161561010002031660029004801561157f5780601f106115545761010080835404028352916020019161157f565b820191906000526020600020905b81548152906001019060200180831161156257829003601f168201915b505093505050506020604051808303818588803b15801561159f57600080fd5b505af11580156115b3573d6000803e3d6000fd5b50505050506040513d60208110156115ca57600080fd5b81019080805190602001909291905050506008819055506008546000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f775071bee3f2d409883bcb9dfcef6befa9343668ab341f76fcc5817b52a126116040805190810160405280601981526020017f506172747920412077696e733b506172747920422077696e73000000000000008152506040518080602001828103825283818151815260200191508051906020019080838360005b838110156116b3578082015181840152602081019050611698565b50505050905090810190601f1680156116e05780820380516001836020036101000a031916815260200191505b509250505060405180910390a350565b6008548214151561170057600080fd5b600260ff16811115151561171357600080fd5b600160ff1681141561179257600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6006546005541161176e57600654611772565b6005545b9081150290604051600060405180830381858888f193505050505061180e565b600260ff1681141561180d57600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc600654600554116117ed576006546117f1565b6005545b9081150290604051600060405180830381858888f19350505050505b5b6004600960006101000a81548160ff0219169083600481111561182d57fe5b021790555050505600a165627a7a72305820aca04bcd374f3605a26d2d1410186c89bc7293ea040e198d84fa2d6cc775c6340029",
  "sourceMap": "504:2135:6:-;;;1143:266;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1300:11;1312:13;1326:8;1335:7;1343:20;2534:11:9;2546:20;2567:13;3465:11:4;3454:10;;:22;;;;;;;;;;;;;;;;;;3501:20;3481:19;:40;;;;;;;;;;;;:::i;:::-;;3532:27;3545:13;3532:27;;;;;;;;;;;;;;;;;;;;;;;;3348:219;;;2601:8:9;2593:7;:16;;;;2627:10;2620:6;;:17;;;;;;;;;;;;;;;;;;2655:7;2648:6;;:14;;;;;;;;;;;;;;;;;;2388:282;;;;;1392:9:6;1384:6;;:17;;;;;;;;;;;1143:266;;;;;504:2135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "504:2135:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6325:127:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:32:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;708:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:21:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;864:21:9;;;;;;;;;;;;;;;;;;;;;;;;;;;5269:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5269:200:9;;;;;;1522:87:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1522:87:6;;;;;;1238:20:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1238:20:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;892:21:9;;;;;;;;;;;;;;;;;;;;;;;;;;;3977:182:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3977:182:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1786:188:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1786:188:6;;;;;;;;;;;;;;;;;;;;;;;;;;920:21:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;920:21:9;;;;;;;;;;;;;;;;;;;;;;;982;;8:9:-1;5:2;;;30:1;27;20:12;5:2;982:21:9;;;;;;;;;;;;;;;;;;;;;;;676:28:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;676:28:4;;;;;;;;;;;;;;;;;;;;;;;;;;;744:19:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:19:9;;;;;;;;;;;;;;;;;;;;;;;5547:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5547:200:9;;;;;;1044:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1044:27:9;;;;;;;;;;;;;;;;;;;;;;;3036:783;;;;;;639:18:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;639:18:6;;;;;;;;;;;;;;;;;;;;;;;1125:21:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1125:21:9;;;;;;;;;;;;;;;;;;;;;;;4011:783;;;;;;5884:171;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5884:171:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6325:127;1703:6;;;;;;;;;;;1691:18;;:10;:18;;;:40;;;;1725:6;;;;;;;;;;;1713:18;;:10;:18;;;1691:40;1683:49;;;;;;;;6388:10;;;;;;;;;;;:17;;;6412:9;6423;;6433:10;6388:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6388:56:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6388:56:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6388:56:9;;;;;6325:127;:::o;708:32:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;864:21:9:-;;;;;;;;;;;;;:::o;5269:200::-;1584:6;;;;;;;;;;;1572:18;;:10;:18;;;1564:27;;;;;;;;5334:20;5326:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;5318:37;;;;;;;;5395:7;;5379:15;;:23;5374:3;:28;;5366:37;;;;;;;;5424;5438:9;;1344:1;5424:37;;:13;:37::i;:::-;5269:200::o;1522:87:6:-;1584:6:9;;;;;;;;;;;1572:18;;:10;:18;;;1564:27;;;;;;;;1559:6:6;;;;;;;;;;;:15;;:23;1575:6;;1559:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1559:23:6;1600:1;1593:6;:8;;;;1522:87::o;1238:20:9:-;;;;;;;;;;;;;:::o;892:21::-;;;;;;;;;;;;;:::o;3977:182:4:-;872:10;;;;;;;;;;;852:31;;:10;:31;;;844:40;;;;;;;;4078:10;4066;4048:49;;;4089:7;4048:49;;;;;;;;;;;;;;;;;;4118:33;4132:10;4143:7;4118:13;:33::i;:::-;3977:182;;:::o;1786:188:6:-;1644:6:9;;;;;;;;;;;1632:18;;:10;:18;;;1624:27;;;;;;;;1878:6:6;;1859:17;:25;;1851:34;;;;;;;;1896:6;;;;;;;;;;;:15;;:34;1912:17;1896:34;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1896:34:6;1949:17;1941:6;;:25;;;;;;;;;;;1786:188;:::o;920:21:9:-;;;;:::o;982:::-;;;;:::o;676:28:4:-;;;;;;;;;;;;;:::o;744:19:9:-;;;;:::o;5547:200::-;1644:6;;;;;;;;;;;1632:18;;:10;:18;;;1624:27;;;;;;;;5612:20;5604:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;5596:37;;;;;;;;5673:7;;5657:15;;:23;5652:3;:28;;5644:37;;;;;;;;5702;5716:9;;1382:1;5702:37;;:13;:37::i;:::-;5547:200::o;1044:27::-;;;;:::o;3036:783::-;3103:20;1584:6;;;;;;;;;;;1572:18;;:10;:18;;;1564:27;;;;;;;;3124:10;;;;;;;;;;;:26;;;3151:19;3124:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3124:47:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3124:47:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3124:47:9;;;;;;;;;;;;;;;;3103:68;;3193:9;3182;;:20;;;;;;;;;;;3234:15;3221:9;;:28;3213:37;;;;;;;;3337:21;3330:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;3322:37;;;;;;;;3445:3;3429:15;:19;;;;3475:15;3463:9;;:27;3459:353;;;3619:20;3612:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;3654:25;3666:12;3654:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;3459:353;;;3771:29;3784:15;3771:12;:29::i;:::-;3459:353;3036:783;:::o;639:18:6:-;;;;:::o;1125:21:9:-;;;;:::o;4011:783::-;4078:20;1644:6;;;;;;;;;;;1632:18;;:10;:18;;;1624:27;;;;;;;;4099:10;;;;;;;;;;;:26;;;4126:19;4099:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4099:47:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4099:47:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4099:47:9;;;;;;;;;;;;;;;;4078:68;;4168:9;4157;;:20;;;;;;;;;;;4209:15;4196:9;;:28;4188:37;;;;;;;;4312:21;4305:28;;;;;;;;:6;;;;;;;;;;;:28;;;;;;;;;4297:37;;;;;;;;4420:3;4404:15;:19;;;;4450:15;4438:9;;:27;4434:353;;;4594:20;4587:6;;:27;;;;;;;;;;;;;;;;;;;;;;;;4629:25;4641:12;4629:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;4434:353;;;4746:29;4759:15;4746:12;:29::i;:::-;4434:353;4011:783;:::o;5884:171::-;1703:6;;;;;;;;;;;1691:18;;:10;:18;;;:40;;;;1725:6;;;;;;;;;;;1713:18;;:10;:18;;;1691:40;1683:49;;;;;;;;5963:21;5955:29;;;;;;;;:6;;;;;;;;;;;:29;;;;;;;;;;5947:38;;;;;;;;6016:9;;6005:10;;;;;;;;;;;5996:51;;;6026:10;6037:9;5996:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5996:51:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5884:171;:::o;2324:299:6:-;2398:39;2418:10;2429:7;2398:19;:39::i;:::-;1344:1:9;2452:21:6;;:7;:21;2448:134;;;2488:6;;;;;;;;;;;:11;;:19;2500:6;;2488:19;;;;;;;;;;;;;;;;;;;;;;;;2448:134;;;1382:1:9;2527:21:6;;:7;:21;2523:59;;;2563:6;;;;;;;;;;;:11;;:19;2575:6;;2563:19;;;;;;;;;;;;;;;;;;;;;;;;2523:59;2448:134;2614:1;2607:6;:8;;;;2324:299;;:::o;4921:264:9:-;4993:21;4986:6;;:28;;;;;;;;;;;;;;;;;;;;;;;;5035:10;;;;;;;;;;;:24;;;5066:16;1306:1;5102:19;5035:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5035:87:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5035:87:9;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5035:87:9;;;;;;;;;;;;;;;;5025:9;:97;;;;5152:9;;5141:10;;;;;;;;;;;5133:44;;;5162:14;;;;;;;;;;;;;;;;;;5133:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5133:44:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4921:264;:::o;6802:671::-;6896:9;;6884:10;:21;6876:30;;;;;;;;1306:1;6925:26;;:7;:26;;6917:35;;;;;;;;1344:1;7102:21;;:7;:21;7098:334;;;7138:6;;;;;;;;;;;:11;;:58;7162:9;;7150;;:21;:45;;7186:9;;7150:45;;;7174:9;;7150:45;7138:58;;;;;;;;;;;;;;;;;;;;;;;;7098:334;;;1382:1;7338:21;;:7;:21;7334:98;;;7374:6;;;;;;;;;;;:11;;:58;7398:9;;7386;;:21;:45;;7422:9;;7386:45;;;7410:9;;7386:45;7374:58;;;;;;;;;;;;;;;;;;;;;;;;7334:98;7098:334;7450:15;7443:6;;:22;;;;;;;;;;;;;;;;;;;;;;;;6802:671;;:::o",
  "source": "/**\r\n *  @title Arbitrable Transaction\r\n *  @author Clément Lesaege - <clement@lesaege.com>\r\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\r\n */\r\n\r\n\r\npragma solidity ^0.4.15;\r\nimport \"./TwoPartyArbitrable.sol\";\r\n\r\n/** @title Arbitrable Transaction\r\n *  This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\r\n *  This can be used for buying goods, services and for paying freelancers.\r\n *  Party A is the payer. Party B is the payee.\r\n */\r\n contract ArbitrableTransaction is TwoPartyArbitrable {\r\n    string constant RULING_OPTIONS = \"Reimburse partyA;Pay partyB\";\r\n    \r\n    uint public amount; // Amount sent by party A.\r\n    \r\n    \r\n    /** @dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _hashContract Keccak hash of the plain English contract.\r\n     *  @param _timeout Time after which a party automatically loose a dispute.\r\n     *  @param _partyB The recipient of the transaction.\r\n     *  @param _arbitratorExtraData Extra data for the arbitrator.\r\n     */\r\n    function ArbitrableTransaction(Arbitrator _arbitrator, bytes32 _hashContract, uint _timeout, address _partyB, bytes _arbitratorExtraData) TwoPartyArbitrable(_arbitrator,_hashContract,_timeout,_partyB,_arbitratorExtraData) payable {\r\n        amount+=msg.value;\r\n    }\r\n\r\n    /** @dev Pay the party B. To be called when the good is delivered or the service rendered.\r\n     */\r\n    function pay() onlyPartyA {\r\n        partyB.transfer(amount);\r\n        amount=0;\r\n    }\r\n    \r\n    /** @dev Reimburse party A. To be called if the good or service can't be fully provided.\r\n     *  @param _amountReimbursed Amount to reimburse in wei.\r\n     */\r\n    function reimburse(uint _amountReimbursed) onlyPartyB {\r\n        require(_amountReimbursed<=amount);\r\n        partyA.transfer(_amountReimbursed);\r\n        amount-=_amountReimbursed;\r\n    }\r\n    \r\n    /** @dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\r\n     *  This need to be extended by contract inheriting from it.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\r\n     */\r\n    function executeRuling(uint _disputeID, uint _ruling) internal {\r\n        super.executeRuling(_disputeID,_ruling);\r\n        if (_ruling==PARTY_A_WINS)\r\n            partyA.send(amount);\r\n        else if (_ruling==PARTY_B_WINS)\r\n            partyB.send(amount);\r\n            \r\n        amount=0;\r\n    }\r\n    \r\n    \r\n }\r\n \r\n",
  "sourcePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
  "ast": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        2898
      ]
    },
    "id": 2899,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2784,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "176:24:6"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 2785,
        "nodeType": "ImportDirective",
        "scope": 2899,
        "sourceUnit": 3616,
        "src": "202:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2786,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3615,
              "src": "538:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$3615",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 2787,
            "nodeType": "InheritanceSpecifier",
            "src": "538:18:6"
          }
        ],
        "contractDependencies": [
          2700,
          3615
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\r\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\r\n This can be used for buying goods, services and for paying freelancers.\r\n Party A is the payer. Party B is the payee.\r",
        "fullyImplemented": true,
        "id": 2898,
        "linearizedBaseContracts": [
          2898,
          3615,
          2700
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2790,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 2898,
            "src": "564:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2788,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "564:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 2789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "597:29:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2792,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 2898,
            "src": "639:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2791,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "639:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2817,
              "nodeType": "Block",
              "src": "1373:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2812,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1384:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2813,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4857,
                        "src": "1392:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1392:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1384:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:17:6"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _hashContract Keccak hash of the plain English contract.\r\n @param _timeout Time after which a party automatically loose a dispute.\r\n @param _partyB The recipient of the transaction.\r\n @param _arbitratorExtraData Extra data for the arbitrator.\r",
            "id": 2818,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2805,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2794,
                    "src": "1300:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2806,
                    "name": "_hashContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2796,
                    "src": "1312:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2807,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2798,
                    "src": "1326:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2808,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "1335:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2809,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "1343:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2810,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2804,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3615,
                  "src": "1281:18:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$3615_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1281:83:6"
              }
            ],
            "name": "ArbitrableTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2794,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1174:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2793,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1174:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2796,
                  "name": "_hashContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1198:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2798,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1221:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2800,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1236:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1253:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:107:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:6"
            },
            "scope": 2898,
            "src": "1143:266:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2833,
              "nodeType": "Block",
              "src": "1548:61:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "1575:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2823,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3221,
                        "src": "1559:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1559:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2829,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1593:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1600:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1593:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2832,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:8:6"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.\r",
            "id": 2834,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2820,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3260,
                  "src": "1537:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1537:10:6"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:6"
            },
            "scope": 2898,
            "src": "1522:87:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2857,
              "nodeType": "Block",
              "src": "1840:134:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2842,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2836,
                          "src": "1859:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2843,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "1878:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1859:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "1851:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2850,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2836,
                        "src": "1912:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2847,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3219,
                        "src": "1896:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1896:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2853,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1941:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2854,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2836,
                      "src": "1949:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1941:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2856,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:25:6"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\r\n @param _amountReimbursed Amount to reimburse in wei.\r",
            "id": 2858,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2839,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2838,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3271,
                  "src": "1829:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1829:10:6"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2836,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2858,
                  "src": "1805:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2835,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1804:24:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:0:6"
            },
            "scope": 2898,
            "src": "1786:188:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2896,
              "nodeType": "Block",
              "src": "2387:236:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2860,
                        "src": "2418:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2869,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "2429:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2865,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "2398:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$2898",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 2867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3614,
                      "src": "2398:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2871,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:39:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2872,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2862,
                      "src": "2452:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2873,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "2461:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2452:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2881,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "2527:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2882,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "2536:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2527:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 2890,
                    "nodeType": "IfStatement",
                    "src": "2523:59:6",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2887,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2792,
                            "src": "2575:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2884,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "2563:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2563:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2889,
                      "nodeType": "ExpressionStatement",
                      "src": "2563:19:6"
                    }
                  },
                  "id": 2891,
                  "nodeType": "IfStatement",
                  "src": "2448:134:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2878,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "2500:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2875,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3219,
                          "src": "2488:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2488:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 2879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2488:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2880,
                    "nodeType": "ExpressionStatement",
                    "src": "2488:19:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2892,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "2607:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2614:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2607:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:8:6"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\r\n This need to be extended by contract inheriting from it.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\r",
            "id": 2897,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2860,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "2347:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2859,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2862,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "2364:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2346:31:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:6"
            },
            "scope": 2898,
            "src": "2324:299:6",
            "stateMutability": "nonpayable",
            "superFunction": 3614,
            "visibility": "internal"
          }
        ],
        "scope": 2899,
        "src": "504:2135:6"
      }
    ],
    "src": "176:2468:6"
  },
  "legacyAST": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/ArbitrableTransaction.sol",
    "exportedSymbols": {
      "ArbitrableTransaction": [
        2898
      ]
    },
    "id": 2899,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2784,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "176:24:6"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/TwoPartyArbitrable.sol",
        "file": "./TwoPartyArbitrable.sol",
        "id": 2785,
        "nodeType": "ImportDirective",
        "scope": 2899,
        "sourceUnit": 3616,
        "src": "202:34:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2786,
              "name": "TwoPartyArbitrable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3615,
              "src": "538:18:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TwoPartyArbitrable_$3615",
                "typeString": "contract TwoPartyArbitrable"
              }
            },
            "id": 2787,
            "nodeType": "InheritanceSpecifier",
            "src": "538:18:6"
          }
        ],
        "contractDependencies": [
          2700,
          3615
        ],
        "contractKind": "contract",
        "documentation": "@title Arbitrable Transaction\r\n This is a a contract for an arbitrated transaction which can be reversed by the arbitrator.\r\n This can be used for buying goods, services and for paying freelancers.\r\n Party A is the payer. Party B is the payee.\r",
        "fullyImplemented": true,
        "id": 2898,
        "linearizedBaseContracts": [
          2898,
          3615,
          2700
        ],
        "name": "ArbitrableTransaction",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "id": 2790,
            "name": "RULING_OPTIONS",
            "nodeType": "VariableDeclaration",
            "scope": 2898,
            "src": "564:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 2788,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "564:6:6",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5265696d6275727365207061727479413b50617920706172747942",
              "id": 2789,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "597:29:6",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_dfa08ec6588a3d8f89e09209c6c214f977ae24abc50ffbe2557bea9c98769f80",
                "typeString": "literal_string \"Reimburse partyA;Pay partyB\""
              },
              "value": "Reimburse partyA;Pay partyB"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 2792,
            "name": "amount",
            "nodeType": "VariableDeclaration",
            "scope": 2898,
            "src": "639:18:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2791,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "639:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2817,
              "nodeType": "Block",
              "src": "1373:36:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2812,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1384:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 2813,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4857,
                        "src": "1392:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2814,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1392:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1384:17:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2816,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:17:6"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator. Should be called by party A (the payer).\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _hashContract Keccak hash of the plain English contract.\r\n @param _timeout Time after which a party automatically loose a dispute.\r\n @param _partyB The recipient of the transaction.\r\n @param _arbitratorExtraData Extra data for the arbitrator.\r",
            "id": 2818,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2805,
                    "name": "_arbitrator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2794,
                    "src": "1300:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2806,
                    "name": "_hashContract",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2796,
                    "src": "1312:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2807,
                    "name": "_timeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2798,
                    "src": "1326:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2808,
                    "name": "_partyB",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2800,
                    "src": "1335:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2809,
                    "name": "_arbitratorExtraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2802,
                    "src": "1343:20:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2810,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2804,
                  "name": "TwoPartyArbitrable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3615,
                  "src": "1281:18:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TwoPartyArbitrable_$3615_$",
                    "typeString": "type(contract TwoPartyArbitrable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1281:83:6"
              }
            ],
            "name": "ArbitrableTransaction",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2794,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1174:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2793,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1174:10:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2796,
                  "name": "_hashContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1198:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2798,
                  "name": "_timeout",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1221:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1221:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2800,
                  "name": "_partyB",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1236:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2802,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2818,
                  "src": "1253:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2801,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1253:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1173:107:6"
            },
            "payable": true,
            "returnParameters": {
              "id": 2811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:6"
            },
            "scope": 2898,
            "src": "1143:266:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2833,
              "nodeType": "Block",
              "src": "1548:61:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2826,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2792,
                        "src": "1575:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2823,
                        "name": "partyB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3221,
                        "src": "1559:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1559:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1559:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2828,
                  "nodeType": "ExpressionStatement",
                  "src": "1559:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2829,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1593:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1600:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1593:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2832,
                  "nodeType": "ExpressionStatement",
                  "src": "1593:8:6"
                }
              ]
            },
            "documentation": "@dev Pay the party B. To be called when the good is delivered or the service rendered.\r",
            "id": 2834,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2821,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2820,
                  "name": "onlyPartyA",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3260,
                  "src": "1537:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1537:10:6"
              }
            ],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1534:2:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1548:0:6"
            },
            "scope": 2898,
            "src": "1522:87:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2857,
              "nodeType": "Block",
              "src": "1840:134:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 2842,
                          "name": "_amountReimbursed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2836,
                          "src": "1859:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 2843,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "1878:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1859:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "1851:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2850,
                        "name": "_amountReimbursed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2836,
                        "src": "1912:17:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2847,
                        "name": "partyA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3219,
                        "src": "1896:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1896:15:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1896:34:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "1896:34:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2853,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1941:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2854,
                      "name": "_amountReimbursed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2836,
                      "src": "1949:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1941:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2856,
                  "nodeType": "ExpressionStatement",
                  "src": "1941:25:6"
                }
              ]
            },
            "documentation": "@dev Reimburse party A. To be called if the good or service can't be fully provided.\r\n @param _amountReimbursed Amount to reimburse in wei.\r",
            "id": 2858,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2839,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2838,
                  "name": "onlyPartyB",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3271,
                  "src": "1829:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1829:10:6"
              }
            ],
            "name": "reimburse",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2836,
                  "name": "_amountReimbursed",
                  "nodeType": "VariableDeclaration",
                  "scope": 2858,
                  "src": "1805:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2835,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1805:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1804:24:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1840:0:6"
            },
            "scope": 2898,
            "src": "1786:188:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2896,
              "nodeType": "Block",
              "src": "2387:236:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2868,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2860,
                        "src": "2418:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2869,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "2429:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2865,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4893,
                        "src": "2398:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ArbitrableTransaction_$2898",
                          "typeString": "contract super ArbitrableTransaction"
                        }
                      },
                      "id": 2867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "executeRuling",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3614,
                      "src": "2398:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:39:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2871,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:39:6"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 2872,
                      "name": "_ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2862,
                      "src": "2452:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 2873,
                      "name": "PARTY_A_WINS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3243,
                      "src": "2461:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "2452:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 2883,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 2881,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2862,
                        "src": "2527:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "id": 2882,
                        "name": "PARTY_B_WINS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3246,
                        "src": "2536:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "2527:21:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": null,
                    "id": 2890,
                    "nodeType": "IfStatement",
                    "src": "2523:59:6",
                    "trueBody": {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2887,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2792,
                            "src": "2575:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 2884,
                            "name": "partyB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3221,
                            "src": "2563:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 2886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2563:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 2888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2563:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 2889,
                      "nodeType": "ExpressionStatement",
                      "src": "2563:19:6"
                    }
                  },
                  "id": 2891,
                  "nodeType": "IfStatement",
                  "src": "2448:134:6",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2878,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2792,
                          "src": "2500:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 2875,
                          "name": "partyA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3219,
                          "src": "2488:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "send",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2488:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 2879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2488:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 2880,
                    "nodeType": "ExpressionStatement",
                    "src": "2488:19:6"
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2892,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "2607:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2614:1:6",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2607:8:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "2607:8:6"
                }
              ]
            },
            "documentation": "@dev Execute a ruling of a dispute. It reimburse the fee to the winning party.\r\n This need to be extended by contract inheriting from it.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. 1 : Reimburse the partyA. 2 : Pay the partyB.\r",
            "id": 2897,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2860,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "2347:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2859,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2347:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2862,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2897,
                  "src": "2364:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2861,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2364:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2346:31:6"
            },
            "payable": false,
            "returnParameters": {
              "id": 2864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2387:0:6"
            },
            "scope": 2898,
            "src": "2324:299:6",
            "stateMutability": "nonpayable",
            "superFunction": 3614,
            "visibility": "internal"
          }
        ],
        "scope": 2899,
        "src": "504:2135:6"
      }
    ],
    "src": "176:2468:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-10T03:43:45.371Z"
}