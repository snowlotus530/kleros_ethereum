{
  "contractName": "Arbitrator",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "AppealPossible",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "DisputeCreation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_arbitrable",
          "type": "address"
        }
      ],
      "name": "AppealDecision",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_choices",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "createDispute",
      "outputs": [
        {
          "name": "disputeID",
          "type": "uint256"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "arbitrationCost",
      "outputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appeal",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "appealCost",
      "outputs": [
        {
          "name": "fee",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "disputeStatus",
      "outputs": [
        {
          "name": "status",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        }
      ],
      "name": "currentRuling",
      "outputs": [
        {
          "name": "ruling",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\r\n *  @title Arbitrator\r\n *  @author Cl√©ment Lesaege - <clement@lesaege.com>\r\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\r\n */\r\n\r\npragma solidity ^0.4.15;\r\n\r\nimport \"./Arbitrable.sol\";\r\n\r\n/** @title Arbitrator\r\n *  Arbitrator abstract contract.\r\n *  When developing arbitrator contracts we need to:\r\n *  -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\r\n *  -Define the functions for cost display (arbitrationCost and appealCost).\r\n *  -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\r\n */\r\ncontract Arbitrator{\r\n    \r\n    enum DisputeStatus {Waiting, Appealable, Solved}\r\n    \r\n    modifier requireArbitrationFee(bytes _extraData) {require(msg.value>=arbitrationCost(_extraData)); _;}\r\n    modifier requireAppealFee(uint _disputeID, bytes _extraData) {require(msg.value>=appealCost(_disputeID, _extraData)); _;}\r\n    \r\n    /** @dev To be raised when a dispute can be appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     */\r\n    event AppealPossible(uint _disputeID);\r\n    \r\n    /** @dev To be raised when a dispute is created.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event DisputeCreation(uint indexed _disputeID, Arbitrable _arbitrable);\r\n    \r\n    /** @dev To be raised when the current ruling is appealed.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @param _arbitrable The contract which created the dispute.\r\n     */\r\n    event AppealDecision(uint indexed _disputeID, Arbitrable _arbitrable);\r\n    \r\n    /** @dev Create a dispute. Must be called by the arbitrable contract.\r\n     *  Must be paid at least arbitrationCost(_extraData).\r\n     *  @param _choices Amount of choices the arbitrator can make in this dispute.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return disputeID ID of the dispute created.\r\n     */\r\n    function createDispute(uint _choices, bytes _extraData) public requireArbitrationFee(_extraData) payable returns(uint disputeID)  {}\r\n    \r\n    /** @dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function arbitrationCost(bytes _extraData) public constant returns(uint fee);\r\n    \r\n    /** @dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give extra info on the appeal.\r\n     */\r\n    function appeal(uint _disputeID, bytes _extraData) public requireAppealFee(_disputeID,_extraData) payable {\r\n        AppealDecision(_disputeID, Arbitrable(msg.sender));\r\n    }\r\n    \r\n    /** @dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n     *  @param _disputeID ID of the dispute to be appealed.\r\n     *  @param _extraData Can be used to give additional info on the dispute to be created.\r\n     *  @return fee Amount to be paid.\r\n     */\r\n    function appealCost(uint _disputeID, bytes _extraData) public constant returns(uint fee);\r\n    \r\n    /** @dev Return the status of a dispute.\r\n     *  @param _disputeID ID of the dispute to rule.\r\n     *  @return status The status of the dispute.\r\n     */\r\n    function disputeStatus(uint _disputeID) public constant returns(DisputeStatus status);\r\n    \r\n    /** @dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n     *  @param _disputeID ID of the dispute.\r\n     *  @return ruling The current ruling which will be given if there is no appeal or which has been given.\r\n     */\r\n    function currentRuling(uint _disputeID) public constant returns(uint ruling);\r\n     \r\n}\r\n",
  "sourcePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
  "ast": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        3018
      ]
    },
    "id": 3019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2900,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "162:24:7"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrable.sol",
        "file": "./Arbitrable.sol",
        "id": 2901,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 2701,
        "src": "190:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Arbitrator\r\n Arbitrator abstract contract.\r\n When developing arbitrator contracts we need to:\r\n -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\r\n -Define the functions for cost display (arbitrationCost and appealCost).\r\n -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\r",
        "fullyImplemented": false,
        "id": 3018,
        "linearizedBaseContracts": [
          3018
        ],
        "name": "Arbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Arbitrator.DisputeStatus",
            "id": 2905,
            "members": [
              {
                "id": 2902,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "751:7:7"
              },
              {
                "id": 2903,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "760:10:7"
              },
              {
                "id": 2904,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "772:6:7"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "731:48:7"
          },
          {
            "body": {
              "id": 2919,
              "nodeType": "Block",
              "src": "840:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "849:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "849:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2913,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2907,
                              "src": "876:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2912,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2974,
                            "src": "860:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "860:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "849:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "841:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "841:47:7"
                },
                {
                  "id": 2918,
                  "nodeType": "PlaceholderStatement",
                  "src": "890:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 2920,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2920,
                  "src": "822:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:18:7"
            },
            "src": "791:102:7",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2937,
              "nodeType": "Block",
              "src": "960:60:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2927,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "969:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "969:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2930,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "991:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2931,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "1003:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2929,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "980:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "969:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "961:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:54:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2935,
                  "nodeType": "ExpressionStatement",
                  "src": "961:54:7"
                },
                {
                  "id": 2936,
                  "nodeType": "PlaceholderStatement",
                  "src": "1017:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 2938,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2922,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "925:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2921,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2924,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "942:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "924:35:7"
            },
            "src": "899:121:7",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute can be appealed.\r\n @param _disputeID ID of the dispute.\r",
            "id": 2942,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2940,
                  "indexed": false,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "1167:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:17:7"
            },
            "src": "1146:38:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 2948,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2944,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1395:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2946,
                  "indexed": false,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1420:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$2700",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2945,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2700,
                    "src": "1420:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$2700",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1394:49:7"
            },
            "src": "1373:71:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when the current ruling is appealed.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 2954,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2950,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1664:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2952,
                  "indexed": false,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1689:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$2700",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2951,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2700,
                    "src": "1689:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$2700",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:49:7"
            },
            "src": "1643:70:7"
          },
          {
            "body": {
              "id": 2966,
              "nodeType": "Block",
              "src": "2230:2:7",
              "statements": []
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost(_extraData).\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 2967,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2961,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2958,
                    "src": "2185:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2962,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2960,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2920,
                  "src": "2163:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2163:33:7"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2123:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2958,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2138:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:33:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2213:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2212:16:7"
            },
            "scope": 3018,
            "src": "2100:132:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 2974,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2969,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "2605:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2968,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2604:18:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2972,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "2647:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2971,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2646:10:7"
            },
            "scope": 3018,
            "src": "2580:77:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2993,
              "nodeType": "Block",
              "src": "3022:69:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2986,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2976,
                        "src": "3048:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2988,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4857,
                              "src": "3071:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3071:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2987,
                          "name": "Arbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2700,
                          "src": "3060:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrable_$2700_$",
                            "typeString": "type(contract Arbitrable)"
                          }
                        },
                        "id": 2990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3060:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrable_$2700",
                          "typeString": "contract Arbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_Arbitrable_$2700",
                          "typeString": "contract Arbitrable"
                        }
                      ],
                      "id": 2985,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2954,
                      "src": "3033:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_Arbitrable_$2700_$returns$__$",
                        "typeString": "function (uint256,contract Arbitrable)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:50:7"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 2994,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2981,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2976,
                    "src": "2991:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2982,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2978,
                    "src": "3002:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2983,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2980,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2938,
                  "src": "2974:16:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2974:39:7"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2976,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "2932:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2978,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "2949:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:35:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 2984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:0:7"
            },
            "scope": 3018,
            "src": "2916:175:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 3003,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3514:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2995,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3531:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3513:35:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3001,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3573:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3572:10:7"
            },
            "scope": 3018,
            "src": "3494:89:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 3010,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3005,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3010,
                  "src": "3778:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3777:17:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3008,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 3010,
                  "src": "3819:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$2905",
                    "typeString": "enum Arbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3007,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2905,
                    "src": "3819:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$2905",
                      "typeString": "enum Arbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3818:22:7"
            },
            "scope": 3018,
            "src": "3755:86:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The current ruling which will be given if there is no appeal or which has been given.\r",
            "id": 3017,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "4153:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4153:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4152:17:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "4194:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4193:13:7"
            },
            "scope": 3018,
            "src": "4130:77:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3019,
        "src": "699:3518:7"
      }
    ],
    "src": "162:4057:7"
  },
  "legacyAST": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
    "exportedSymbols": {
      "Arbitrator": [
        3018
      ]
    },
    "id": 3019,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2900,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "162:24:7"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrable.sol",
        "file": "./Arbitrable.sol",
        "id": 2901,
        "nodeType": "ImportDirective",
        "scope": 3019,
        "sourceUnit": 2701,
        "src": "190:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Arbitrator\r\n Arbitrator abstract contract.\r\n When developing arbitrator contracts we need to:\r\n -Define the functions for dispute creation (createDispute) and appeal (appeal). Don't forget to store the arbitrated contract and the disputeID (which should be unique, use nbDisputes).\r\n -Define the functions for cost display (arbitrationCost and appealCost).\r\n -Allow giving rulings. For this a function must call arbitrable.rule(disputeID,ruling).\r",
        "fullyImplemented": false,
        "id": 3018,
        "linearizedBaseContracts": [
          3018
        ],
        "name": "Arbitrator",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Arbitrator.DisputeStatus",
            "id": 2905,
            "members": [
              {
                "id": 2902,
                "name": "Waiting",
                "nodeType": "EnumValue",
                "src": "751:7:7"
              },
              {
                "id": 2903,
                "name": "Appealable",
                "nodeType": "EnumValue",
                "src": "760:10:7"
              },
              {
                "id": 2904,
                "name": "Solved",
                "nodeType": "EnumValue",
                "src": "772:6:7"
              }
            ],
            "name": "DisputeStatus",
            "nodeType": "EnumDefinition",
            "src": "731:48:7"
          },
          {
            "body": {
              "id": 2919,
              "nodeType": "Block",
              "src": "840:53:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2915,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2910,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "849:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "849:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2913,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2907,
                              "src": "876:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2912,
                            "name": "arbitrationCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2974,
                            "src": "860:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2914,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "860:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "849:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "841:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "841:47:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2917,
                  "nodeType": "ExpressionStatement",
                  "src": "841:47:7"
                },
                {
                  "id": 2918,
                  "nodeType": "PlaceholderStatement",
                  "src": "890:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 2920,
            "name": "requireArbitrationFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2907,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2920,
                  "src": "822:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2906,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "821:18:7"
            },
            "src": "791:102:7",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2937,
              "nodeType": "Block",
              "src": "960:60:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2927,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "969:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "969:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2930,
                              "name": "_disputeID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2922,
                              "src": "991:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 2931,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2924,
                              "src": "1003:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 2929,
                            "name": "appealCost",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3003,
                            "src": "980:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,bytes memory) view returns (uint256)"
                            }
                          },
                          "id": 2932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "980:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "969:45:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "961:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "961:54:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2935,
                  "nodeType": "ExpressionStatement",
                  "src": "961:54:7"
                },
                {
                  "id": 2936,
                  "nodeType": "PlaceholderStatement",
                  "src": "1017:1:7"
                }
              ]
            },
            "documentation": null,
            "id": 2938,
            "name": "requireAppealFee",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2922,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "925:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2921,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "925:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2924,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2938,
                  "src": "942:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2923,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "942:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "924:35:7"
            },
            "src": "899:121:7",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute can be appealed.\r\n @param _disputeID ID of the dispute.\r",
            "id": 2942,
            "name": "AppealPossible",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2940,
                  "indexed": false,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2942,
                  "src": "1167:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2939,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1167:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1166:17:7"
            },
            "src": "1146:38:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 2948,
            "name": "DisputeCreation",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2944,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1395:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2943,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2946,
                  "indexed": false,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2948,
                  "src": "1420:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$2700",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2945,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2700,
                    "src": "1420:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$2700",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1394:49:7"
            },
            "src": "1373:71:7"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when the current ruling is appealed.\r\n @param _disputeID ID of the dispute.\r\n @param _arbitrable The contract which created the dispute.\r",
            "id": 2954,
            "name": "AppealDecision",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2950,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1664:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2949,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2952,
                  "indexed": false,
                  "name": "_arbitrable",
                  "nodeType": "VariableDeclaration",
                  "scope": 2954,
                  "src": "1689:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrable_$2700",
                    "typeString": "contract Arbitrable"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2951,
                    "name": "Arbitrable",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2700,
                    "src": "1689:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrable_$2700",
                      "typeString": "contract Arbitrable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:49:7"
            },
            "src": "1643:70:7"
          },
          {
            "body": {
              "id": 2966,
              "nodeType": "Block",
              "src": "2230:2:7",
              "statements": []
            },
            "documentation": "@dev Create a dispute. Must be called by the arbitrable contract.\r\n Must be paid at least arbitrationCost(_extraData).\r\n @param _choices Amount of choices the arbitrator can make in this dispute.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return disputeID ID of the dispute created.\r",
            "id": 2967,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2961,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2958,
                    "src": "2185:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2962,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2960,
                  "name": "requireArbitrationFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2920,
                  "src": "2163:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2163:33:7"
              }
            ],
            "name": "createDispute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2956,
                  "name": "_choices",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2123:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2955,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2958,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2138:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2957,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2138:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2122:33:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 2965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2964,
                  "name": "disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2967,
                  "src": "2213:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2963,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2213:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2212:16:7"
            },
            "scope": 3018,
            "src": "2100:132:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of arbitration. It is recommended not to increase it often, as it can be highly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 2974,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "arbitrationCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2970,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2969,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "2605:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2968,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2605:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2604:18:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 2973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2972,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 2974,
                  "src": "2647:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2971,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2646:10:7"
            },
            "scope": 3018,
            "src": "2580:77:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2993,
              "nodeType": "Block",
              "src": "3022:69:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2986,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2976,
                        "src": "3048:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2988,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4857,
                              "src": "3071:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3071:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2987,
                          "name": "Arbitrable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2700,
                          "src": "3060:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrable_$2700_$",
                            "typeString": "type(contract Arbitrable)"
                          }
                        },
                        "id": 2990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3060:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrable_$2700",
                          "typeString": "contract Arbitrable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_Arbitrable_$2700",
                          "typeString": "contract Arbitrable"
                        }
                      ],
                      "id": 2985,
                      "name": "AppealDecision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2954,
                      "src": "3033:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_contract$_Arbitrable_$2700_$returns$__$",
                        "typeString": "function (uint256,contract Arbitrable)"
                      }
                    },
                    "id": 2991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3033:50:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2992,
                  "nodeType": "ExpressionStatement",
                  "src": "3033:50:7"
                }
              ]
            },
            "documentation": "@dev Appeal a ruling. Note that it has to be called before the arbitrator contract calls rule.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give extra info on the appeal.\r",
            "id": 2994,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2981,
                    "name": "_disputeID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2976,
                    "src": "2991:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2982,
                    "name": "_extraData",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2978,
                    "src": "3002:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 2983,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2980,
                  "name": "requireAppealFee",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2938,
                  "src": "2974:16:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$_t_bytes_memory_ptr_$",
                    "typeString": "modifier (uint256,bytes memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2974:39:7"
              }
            ],
            "name": "appeal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2976,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "2932:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2975,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2978,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2994,
                  "src": "2949:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2977,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2931:35:7"
            },
            "payable": true,
            "returnParameters": {
              "id": 2984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3022:0:7"
            },
            "scope": 3018,
            "src": "2916:175:7",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Compute the cost of appeal. It is recommended not to increase it often, as it can be higly time and gas consuming for the arbitrated contracts to cope with fee augmentation.\r\n @param _disputeID ID of the dispute to be appealed.\r\n @param _extraData Can be used to give additional info on the dispute to be created.\r\n @return fee Amount to be paid.\r",
            "id": 3003,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "appealCost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2996,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3514:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2995,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3514:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2998,
                  "name": "_extraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3531:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2997,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3531:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3513:35:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3001,
                  "name": "fee",
                  "nodeType": "VariableDeclaration",
                  "scope": 3003,
                  "src": "3573:8:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3000,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3573:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3572:10:7"
            },
            "scope": 3018,
            "src": "3494:89:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the status of a dispute.\r\n @param _disputeID ID of the dispute to rule.\r\n @return status The status of the dispute.\r",
            "id": 3010,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "disputeStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3005,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3010,
                  "src": "3778:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3004,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3778:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3777:17:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3008,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 3010,
                  "src": "3819:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DisputeStatus_$2905",
                    "typeString": "enum Arbitrator.DisputeStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3007,
                    "name": "DisputeStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2905,
                    "src": "3819:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DisputeStatus_$2905",
                      "typeString": "enum Arbitrator.DisputeStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3818:22:7"
            },
            "scope": 3018,
            "src": "3755:86:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Return the current ruling of a dispute. This is useful for parties to know if they should appeal.\r\n @param _disputeID ID of the dispute.\r\n @return ruling The current ruling which will be given if there is no appeal or which has been given.\r",
            "id": 3017,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "currentRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3012,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "4153:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3011,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4153:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4152:17:7"
            },
            "payable": false,
            "returnParameters": {
              "id": 3016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3015,
                  "name": "ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 3017,
                  "src": "4194:11:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3014,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4194:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4193:13:7"
            },
            "scope": 3018,
            "src": "4130:77:7",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3019,
        "src": "699:3518:7"
      }
    ],
    "src": "162:4057:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-10T03:43:45.367Z"
}