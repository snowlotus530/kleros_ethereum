{
  "contractName": "Arbitrable",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "arbitratorExtraData",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "arbitrator",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "name": "_arbitratorExtraData",
          "type": "bytes"
        },
        {
          "name": "_contractHash",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_rulingOptions",
          "type": "string"
        }
      ],
      "name": "Dispute",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "Ruling",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_arbitrator",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "_party",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_evidence",
          "type": "string"
        }
      ],
      "name": "Evidence",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_contractHash",
          "type": "bytes32"
        }
      ],
      "name": "ContractHash",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_disputeID",
          "type": "uint256"
        },
        {
          "name": "_ruling",
          "type": "uint256"
        }
      ],
      "name": "rule",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\r\n *  @title Arbitrable\r\n *  @author Cl√©ment Lesaege - <clement@lesaege.com>\r\n *  Bug Bounties: This code hasn't undertaken a bug bounty program yet.\r\n */\r\n\r\npragma solidity ^0.4.15;\r\n\r\nimport \"./Arbitrator.sol\";\r\n\r\n/** @title Arbitrable\r\n *  Arbitrable abstract contract.\r\n *  When developing arbitrable contracts, we need to:\r\n *  -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\r\n *  -Allow dispute creation. For this a function must:\r\n *      -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\r\n *      -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\r\n */\r\ncontract Arbitrable{\r\n    Arbitrator public arbitrator;\r\n\tbytes public arbitratorExtraData; // Extra data to require particular dispute and appeal behaviour.\r\n    \r\n    modifier onlyArbitrator {require(msg.sender==address(arbitrator)); _;}\r\n    \r\n    /** @dev To be raised when a dispute is created. The main purpose of this event is to let the arbitrator know the meaning ruling IDs.\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _rulingOptions Map ruling IDs to short description of the ruling in a CSV format using \";\" as a delimiter. Note that ruling IDs start a 1. For example \"Send funds to buyer;Send funds to seller\", means that ruling 1 will make the contract send funds to the buyer and 2 to the seller.\r\n     */\r\n    event Dispute(Arbitrator indexed _arbitrator, uint indexed _disputeID, string _rulingOptions);\r\n    \r\n    /** @dev To be raised when a ruling is given.\r\n     *  @param _arbitrator The arbitrator giving the ruling.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling The ruling which was given.\r\n     */\r\n    event Ruling(Arbitrator indexed _arbitrator, uint indexed _disputeID, uint _ruling);\r\n    \r\n    /** @dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due tp gas considerations).\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _party The address of the party submiting the evidence. Note that 0 is kept for evidences not submitted by any party.\r\n     *  @param _evidence A link to evidence or if it is short the evidence itself. Can be web link (\"http://X\"), IPFS (\"ipfs:/X\") or another storing service (using the URI, see https://en.wikipedia.org/wiki/Uniform_Resource_Identifier ). One usecase of short evidence is to include the hash of the plain English contract.\r\n     */\r\n    event Evidence(Arbitrator indexed _arbitrator, uint indexed _disputeID, address _party, string _evidence);\r\n    \r\n    /** @dev To be emmited at contract creation. Contains the hash of the plain text contract. This will allow any party to show what was the original contract.\r\n     *  This event is used as cheap way of storing it.\r\n     *  @param _contractHash Keccak256 hash of the plain text contract.\r\n     */\r\n    event ContractHash(bytes32 _contractHash);\r\n    \r\n    /** @dev Constructor. Choose the arbitrator.\r\n     *  @param _arbitrator The arbitrator of the contract.\r\n     *  @param _contractHash Keccak256 hash of the plain text contract.\r\n     */\r\n    function Arbitrable(Arbitrator _arbitrator, bytes _arbitratorExtraData, bytes32 _contractHash) {\r\n        arbitrator=_arbitrator;\r\n\t\tarbitratorExtraData=_arbitratorExtraData;\r\n        ContractHash(_contractHash);\r\n    }\r\n    \r\n    /** @dev Give a ruling for a dispute. Must be call by the arbitrator.\r\n     *  The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function rule(uint _disputeID, uint _ruling) onlyArbitrator {\r\n        Ruling(Arbitrator(msg.sender),_disputeID,_ruling);\r\n        \r\n        executeRuling(_disputeID,_ruling);\r\n    }\r\n    \r\n    \r\n    /** @dev Execute a ruling of a dispute.\r\n     *  @param _disputeID ID of the dispute in the Arbitrator contract.\r\n     *  @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r\n     */\r\n    function executeRuling(uint _disputeID, uint _ruling) internal;\r\n}\r\n\r\n\r\n",
  "sourcePath": "kleros-interaction/contracts/standard/arbitration/Arbitrable.sol",
  "ast": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrable.sol",
    "exportedSymbols": {
      "Arbitrable": [
        2700
      ]
    },
    "id": 2701,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2598,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "162:24:4"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
        "file": "./Arbitrator.sol",
        "id": 2599,
        "nodeType": "ImportDirective",
        "scope": 2701,
        "sourceUnit": 3019,
        "src": "190:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Arbitrable\r\n Arbitrable abstract contract.\r\n When developing arbitrable contracts, we need to:\r\n -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\r\n -Allow dispute creation. For this a function must:\r\n     -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\r\n     -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\r",
        "fullyImplemented": false,
        "id": 2700,
        "linearizedBaseContracts": [
          2700
        ],
        "name": "Arbitrable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2601,
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 2700,
            "src": "676:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Arbitrator_$3018",
              "typeString": "contract Arbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 2600,
              "name": "Arbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3018,
              "src": "676:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                "typeString": "contract Arbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2603,
            "name": "arbitratorExtraData",
            "nodeType": "VariableDeclaration",
            "scope": 2700,
            "src": "708:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 2602,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "708:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "843:46:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2606,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "852:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "852:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2609,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2601,
                              "src": "872:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                                "typeString": "contract Arbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                                "typeString": "contract Arbitrator"
                              }
                            ],
                            "id": 2608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "864:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "864:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "852:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "844:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2613,
                  "nodeType": "ExpressionStatement",
                  "src": "844:40:4"
                },
                {
                  "id": 2614,
                  "nodeType": "PlaceholderStatement",
                  "src": "886:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "name": "onlyArbitrator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:4"
            },
            "src": "819:70:4",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created. The main purpose of this event is to let the arbitrator know the meaning ruling IDs.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _rulingOptions Map ruling IDs to short description of the ruling in a CSV format using \";\" as a delimiter. Note that ruling IDs start a 1. For example \"Send funds to buyer;Send funds to seller\", means that ruling 1 will make the contract send funds to the buyer and 2 to the seller.\r",
            "id": 2624,
            "name": "Dispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2618,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1495:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2617,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1495:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2620,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1527:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2622,
                  "indexed": false,
                  "name": "_rulingOptions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1552:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:80:4"
            },
            "src": "1481:94:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a ruling is given.\r\n @param _arbitrator The arbitrator giving the ruling.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling The ruling which was given.\r",
            "id": 2632,
            "name": "Ruling",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2626,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1847:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2625,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1847:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1879:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "indexed": false,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1904:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1846:71:4"
            },
            "src": "1834:84:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due tp gas considerations).\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _party The address of the party submiting the evidence. Note that 0 is kept for evidences not submitted by any party.\r\n @param _evidence A link to evidence or if it is short the evidence itself. Can be web link (\"http://X\"), IPFS (\"ipfs:/X\") or another storing service (using the URI, see https://en.wikipedia.org/wiki/Uniform_Resource_Identifier ). One usecase of short evidence is to include the hash of the plain English contract.\r",
            "id": 2642,
            "name": "Evidence",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2699:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2633,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "2699:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2636,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2731:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2635,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2638,
                  "indexed": false,
                  "name": "_party",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2756:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "indexed": false,
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2772:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2698:91:4"
            },
            "src": "2684:106:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be emmited at contract creation. Contains the hash of the plain text contract. This will allow any party to show what was the original contract.\r\n This event is used as cheap way of storing it.\r\n @param _contractHash Keccak256 hash of the plain text contract.\r",
            "id": 2646,
            "name": "ContractHash",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "indexed": false,
                  "name": "_contractHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "3121:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3120:23:4"
            },
            "src": "3102:42:4"
          },
          {
            "body": {
              "id": 2667,
              "nodeType": "Block",
              "src": "3443:124:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2655,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2601,
                      "src": "3454:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$3018",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2656,
                      "name": "_arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2648,
                      "src": "3465:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$3018",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "src": "3454:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2659,
                      "name": "arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "3481:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2660,
                      "name": "_arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2650,
                      "src": "3501:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3481:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 2662,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2664,
                        "name": "_contractHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2652,
                        "src": "3545:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2663,
                      "name": "ContractHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "3532:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3532:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "3532:27:4"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _contractHash Keccak256 hash of the plain text contract.\r",
            "id": 2668,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Arbitrable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3368:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2647,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "3368:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2650,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3392:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2652,
                  "name": "_contractHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3420:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3367:75:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:4"
            },
            "scope": 2700,
            "src": "3348:219:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "4037:122:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4857,
                              "src": "4066:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4066:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2678,
                          "name": "Arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3018,
                          "src": "4055:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrator_$3018_$",
                            "typeString": "type(contract Arbitrator)"
                          }
                        },
                        "id": 2681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4055:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$3018",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2682,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2670,
                        "src": "4078:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2683,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "4089:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$3018",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2677,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "4048:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$3018_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256)"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2685,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2670,
                        "src": "4132:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "4143:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2686,
                      "name": "executeRuling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "4118:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4118:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "ExpressionStatement",
                  "src": "4118:33:4"
                }
              ]
            },
            "documentation": "@dev Give a ruling for a dispute. Must be call by the arbitrator.\r\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 2692,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2674,
                  "name": "onlyArbitrator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2616,
                  "src": "4022:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4022:14:4"
              }
            ],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2670,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "3991:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2672,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "4008:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3990:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4037:0:4"
            },
            "scope": 2700,
            "src": "3977:182:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Execute a ruling of a dispute.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 2699,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2694,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4450:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2693,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2696,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4467:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4449:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4489:0:4"
            },
            "scope": 2700,
            "src": "4427:63:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2701,
        "src": "650:3843:4"
      }
    ],
    "src": "162:4337:4"
  },
  "legacyAST": {
    "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrable.sol",
    "exportedSymbols": {
      "Arbitrable": [
        2700
      ]
    },
    "id": 2701,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2598,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".15"
        ],
        "nodeType": "PragmaDirective",
        "src": "162:24:4"
      },
      {
        "absolutePath": "kleros-interaction/contracts/standard/arbitration/Arbitrator.sol",
        "file": "./Arbitrator.sol",
        "id": 2599,
        "nodeType": "ImportDirective",
        "scope": 2701,
        "sourceUnit": 3019,
        "src": "190:26:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title Arbitrable\r\n Arbitrable abstract contract.\r\n When developing arbitrable contracts, we need to:\r\n -Define the action taken when a ruling is received by the contract. We should do so in executeRuling.\r\n -Allow dispute creation. For this a function must:\r\n     -Call arbitrator.createDispute.value(_fee)(_choices,_extraData);\r\n     -Create the event Dispute(_arbitrator,_disputeID,_rulingOptions);\r",
        "fullyImplemented": false,
        "id": 2700,
        "linearizedBaseContracts": [
          2700
        ],
        "name": "Arbitrable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2601,
            "name": "arbitrator",
            "nodeType": "VariableDeclaration",
            "scope": 2700,
            "src": "676:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Arbitrator_$3018",
              "typeString": "contract Arbitrator"
            },
            "typeName": {
              "contractScope": null,
              "id": 2600,
              "name": "Arbitrator",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3018,
              "src": "676:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                "typeString": "contract Arbitrator"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 2603,
            "name": "arbitratorExtraData",
            "nodeType": "VariableDeclaration",
            "scope": 2700,
            "src": "708:32:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 2602,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "708:5:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2615,
              "nodeType": "Block",
              "src": "843:46:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 2606,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4857,
                            "src": "852:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "852:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 2609,
                              "name": "arbitrator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2601,
                              "src": "872:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                                "typeString": "contract Arbitrator"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Arbitrator_$3018",
                                "typeString": "contract Arbitrator"
                              }
                            ],
                            "id": 2608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "864:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 2610,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "864:19:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "852:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2605,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4860,
                        4861
                      ],
                      "referencedDeclaration": 4860,
                      "src": "844:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "844:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2613,
                  "nodeType": "ExpressionStatement",
                  "src": "844:40:4"
                },
                {
                  "id": 2614,
                  "nodeType": "PlaceholderStatement",
                  "src": "886:1:4"
                }
              ]
            },
            "documentation": null,
            "id": 2616,
            "name": "onlyArbitrator",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "843:0:4"
            },
            "src": "819:70:4",
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a dispute is created. The main purpose of this event is to let the arbitrator know the meaning ruling IDs.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _rulingOptions Map ruling IDs to short description of the ruling in a CSV format using \";\" as a delimiter. Note that ruling IDs start a 1. For example \"Send funds to buyer;Send funds to seller\", means that ruling 1 will make the contract send funds to the buyer and 2 to the seller.\r",
            "id": 2624,
            "name": "Dispute",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2618,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1495:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2617,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1495:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2620,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1527:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2619,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1527:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2622,
                  "indexed": false,
                  "name": "_rulingOptions",
                  "nodeType": "VariableDeclaration",
                  "scope": 2624,
                  "src": "1552:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2621,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1552:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:80:4"
            },
            "src": "1481:94:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when a ruling is given.\r\n @param _arbitrator The arbitrator giving the ruling.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling The ruling which was given.\r",
            "id": 2632,
            "name": "Ruling",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2626,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1847:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2625,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "1847:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2628,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1879:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2627,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1879:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2630,
                  "indexed": false,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2632,
                  "src": "1904:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2629,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1904:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1846:71:4"
            },
            "src": "1834:84:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be raised when evidence are submitted. Should point to the ressource (evidences are not to be stored on chain due tp gas considerations).\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _party The address of the party submiting the evidence. Note that 0 is kept for evidences not submitted by any party.\r\n @param _evidence A link to evidence or if it is short the evidence itself. Can be web link (\"http://X\"), IPFS (\"ipfs:/X\") or another storing service (using the URI, see https://en.wikipedia.org/wiki/Uniform_Resource_Identifier ). One usecase of short evidence is to include the hash of the plain English contract.\r",
            "id": 2642,
            "name": "Evidence",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2634,
                  "indexed": true,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2699:30:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2633,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "2699:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2636,
                  "indexed": true,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2731:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2635,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2731:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2638,
                  "indexed": false,
                  "name": "_party",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2756:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2640,
                  "indexed": false,
                  "name": "_evidence",
                  "nodeType": "VariableDeclaration",
                  "scope": 2642,
                  "src": "2772:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2639,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2772:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2698:91:4"
            },
            "src": "2684:106:4"
          },
          {
            "anonymous": false,
            "documentation": "@dev To be emmited at contract creation. Contains the hash of the plain text contract. This will allow any party to show what was the original contract.\r\n This event is used as cheap way of storing it.\r\n @param _contractHash Keccak256 hash of the plain text contract.\r",
            "id": 2646,
            "name": "ContractHash",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2645,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2644,
                  "indexed": false,
                  "name": "_contractHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2646,
                  "src": "3121:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2643,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3121:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3120:23:4"
            },
            "src": "3102:42:4"
          },
          {
            "body": {
              "id": 2667,
              "nodeType": "Block",
              "src": "3443:124:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2655,
                      "name": "arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2601,
                      "src": "3454:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$3018",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2656,
                      "name": "_arbitrator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2648,
                      "src": "3465:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Arbitrator_$3018",
                        "typeString": "contract Arbitrator"
                      }
                    },
                    "src": "3454:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "id": 2658,
                  "nodeType": "ExpressionStatement",
                  "src": "3454:22:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2659,
                      "name": "arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "3481:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 2660,
                      "name": "_arbitratorExtraData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2650,
                      "src": "3501:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3481:40:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 2662,
                  "nodeType": "ExpressionStatement",
                  "src": "3481:40:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2664,
                        "name": "_contractHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2652,
                        "src": "3545:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 2663,
                      "name": "ContractHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2646,
                      "src": "3532:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 2665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3532:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2666,
                  "nodeType": "ExpressionStatement",
                  "src": "3532:27:4"
                }
              ]
            },
            "documentation": "@dev Constructor. Choose the arbitrator.\r\n @param _arbitrator The arbitrator of the contract.\r\n @param _contractHash Keccak256 hash of the plain text contract.\r",
            "id": 2668,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "Arbitrable",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2648,
                  "name": "_arbitrator",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3368:22:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Arbitrator_$3018",
                    "typeString": "contract Arbitrator"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 2647,
                    "name": "Arbitrator",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3018,
                    "src": "3368:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Arbitrator_$3018",
                      "typeString": "contract Arbitrator"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2650,
                  "name": "_arbitratorExtraData",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3392:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2652,
                  "name": "_contractHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 2668,
                  "src": "3420:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2651,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3420:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3367:75:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2654,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:4"
            },
            "scope": 2700,
            "src": "3348:219:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2691,
              "nodeType": "Block",
              "src": "4037:122:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 2679,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4857,
                              "src": "4066:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4066:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2678,
                          "name": "Arbitrator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3018,
                          "src": "4055:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Arbitrator_$3018_$",
                            "typeString": "type(contract Arbitrator)"
                          }
                        },
                        "id": 2681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4055:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Arbitrator_$3018",
                          "typeString": "contract Arbitrator"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2682,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2670,
                        "src": "4078:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2683,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "4089:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Arbitrator_$3018",
                          "typeString": "contract Arbitrator"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2677,
                      "name": "Ruling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2632,
                      "src": "4048:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_Arbitrator_$3018_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract Arbitrator,uint256,uint256)"
                      }
                    },
                    "id": 2684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4048:49:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2685,
                  "nodeType": "ExpressionStatement",
                  "src": "4048:49:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2687,
                        "name": "_disputeID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2670,
                        "src": "4132:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2688,
                        "name": "_ruling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2672,
                        "src": "4143:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2686,
                      "name": "executeRuling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2699,
                      "src": "4118:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4118:33:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2690,
                  "nodeType": "ExpressionStatement",
                  "src": "4118:33:4"
                }
              ]
            },
            "documentation": "@dev Give a ruling for a dispute. Must be call by the arbitrator.\r\n The purpose of this function is to ensure that the address calling it has the right to rule on the contract.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 2692,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 2675,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2674,
                  "name": "onlyArbitrator",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2616,
                  "src": "4022:14:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4022:14:4"
              }
            ],
            "name": "rule",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2670,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "3991:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "3991:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2672,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2692,
                  "src": "4008:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2671,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3990:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4037:0:4"
            },
            "scope": 2700,
            "src": "3977:182:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@dev Execute a ruling of a dispute.\r\n @param _disputeID ID of the dispute in the Arbitrator contract.\r\n @param _ruling Ruling given by the arbitrator. Note that 0 is reserved for \"Not able/wanting to make a decision\".\r",
            "id": 2699,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "executeRuling",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2694,
                  "name": "_disputeID",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4450:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2693,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4450:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2696,
                  "name": "_ruling",
                  "nodeType": "VariableDeclaration",
                  "scope": 2699,
                  "src": "4467:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2695,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4467:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4449:31:4"
            },
            "payable": false,
            "returnParameters": {
              "id": 2698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4489:0:4"
            },
            "scope": 2700,
            "src": "4427:63:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 2701,
        "src": "650:3843:4"
      }
    ],
    "src": "162:4337:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.23+commit.124ca40d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-06-11T15:01:52.614Z"
}